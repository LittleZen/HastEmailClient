<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8O+vrxNe/z25vo78275uzHo+ju
        xSwAAAAA7e3IDv///wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9vbtHezx0d/r8NH/5+7K/+bt
        x//m7cf15u3Hyubtx//m7cbL5uzHKejo0QsAAAAAAAAAAAAAAAAAAAAAAAAAAObsx27V3Lj/truV/7a7
        lP+2u5T/truU/7a7lP+2u5T/truV/9HXs//m7Mfq5+3IKgAAAAAAAAAAjY2hJr/Mx3fZ49DVrrOg/6Cl
        ff+rr3j/q694/6uveP+tr3n/urx+/6Gjdf+vtIv/5u3H/+Xtx4AAAAAAAAAAAK+4tpDk7/L/7/z9/93o
        6/+qsJT/nqFz/5uecv+ipnX/zM+F/6Sndv+ytXv/rrKJ/+btx/7n68dAAAAAAAAAAADm7seExs28/8vU
        z/+fpY//srV7/4OFav96fGb/foBn/5SXb/+OkG3/srV7/66yif/m7cf/6urKGAAAAAAAAAAA6OzHN+bt
        x/fm7cf/sbaQ/7K1e/+ipXX/kJNu/3x/Z/9+gWf/k5Zw/7K1e/+uson/5u3H/+ftyCoAAAAAAAAAAAAA
        AADm7sQe5uzH+LG2kP+ytXv/zM+F/8zPhf/Mz4X/zM+F/8zPhf+ytXv/rrKJ/+btxrkAAAAAAAAAAAAA
        AAAAAAAAAAAAAOXtyIHCx6P+lpp1/5mcdf+RlHH/mp11/5CTcf+Qk3L/k5Z2/662pPnK2dzVrrXCmwAA
        AAAAAAAAAAAAAAAAAAAAAAAA5+3IKuXsyE/m7cjY5+7K/+btx//T3ML/09vf/+/8/f/e6+7/xM7W9Kmz
        vG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8vbldfD12/zu8tf/5+7K/8vRvP+5wrvnvcfPxUtT
        aSIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm68k05e3Hn+Xsx7Pm7MZ539+/CAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA+P8AAPAPAADwAwAA4AEAAIADAACAAwAAwAMAAOAD
        AADgAQAA/AMAAP4HAAD/PwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8X///qDObvxT7l7Mdt5e7Hd+XtxmLi68QaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8w////KvT25HDx9d3o7vPa/+zx1P/m7cf/5u3H/+btx/vn7cid5vLMFAAA
        AAD///8B5+3KK+juxi3j48YJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////Dv///0Ty9uKO8PXe/e/02//q8dH/6/DS/+btx//m7cf/5u3H/+bt
        x//m7cfa6O7GTObsx87m7cf/5u3H/+btx+jn7chUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5e3GOubtx/zn7sn/6vDR/+fuyf/m7cf/5u3H/+bt
        x//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx/7n7MZe6OzJQufvxyAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADl7ca95u3H/+btx//m7cf/5u3H/+bt
        x//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+btx//m7cf/5u3H/+bt
        x67u7swPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6OjFFubtx/3m7cf/mJyD/4GF
        av+Agmj/gIJo/4CCaP+Agmj/gIJo/4CCaP+Agmj/gIJo/4CCaP+Agmj/gIJo/4CCaP+BhGr/g4Zz/+Tr
        xf/m7cf/5u3H/+btx5wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADl7cY65u3H/+Lp
        xP+Eh2r/nqF0/5WXcP+WmHH/lphx/5aYcf+WmHH/lphx/5aYcf+WmHH/m51y/8bJg/+WmHH/lphx/46R
        bv+mqHf/trye/+btx//m7cf/5u3H9P//qgMAAAAAAAAAAAAAAAAAAAAAAAAAAHh/jpOYoKzEydPV6s/a
        2vjI0c3/qbCw/5KYmv+Fi4X/ys2F/8zPhf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zP
        hf/Mz4X/l5px/7Gze/+ssJb/5u3H/+btx//m7cf/5vLMFAAAAAAAAAAAAAAAAAAAAAAiM0QPt8HJ8uv4
        +f/v/P3/7/z9/+/8/f/v/P3/7/z9/8nU2f+0t33/p6t3/8zPhf/Mz4X/p6t3/7i7ff+3un3/zM+F/8zP
        hf+3un3/u75+/8zPhf+XmnH/sbN7/6ywlv/m7cf/5u3H/+btx9YAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACYn5vpx9HY/+/8/f/v/P3/7/z9/+/8/f+5wcP/hIqD/8vOhP9nal//mZtx/6uveP9FSFL/kJJt/4mM
        a//Mz4X/zM+F/4eJa/+Ul2//zM+F/5eacf+xs3v/rLCW/+btx//m7cf75u7JPQAAAAAAAAAAAAAAAAAA
        AAAAAAAA6+vEDeLoxP2TmZ7/q7K2/9Tf4v/v/P3/jpSX/4CDbf+XmnH/zM+F/5qccv9YW1n/dHZj/2Fj
        XP+SlG//aWtf/5udcv/FyIL/h4lr/5SXb//Mz4X/l5px/7Gze/+ssJb/5u3H/+btx//m7MYoAAAAAAAA
        AAAAAAAAAAAAAAAAAADm5swK5u3H/Obtx//m7cf/sLer/6uyrP/N07X/io1s/5eacf/Mz4X/xMaC/1pc
        Wv+BhGn/kZRv/5KUb/9vcWH/k5Zw/1VXWP+HiWv/lJdv/8zPhf+XmnH/sbN7/6ywlv/m7cf/5u3H/+bt
        x2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADm7ca05u3H/+btx//m7cf/5u3H/97lv/+KjWz/l5px/8zP
        hf/Mz4X/X2Jb/01PVP/BxIH/kpRv/4mMa//KzYX/SEtT/4eJa/+Ul2//zM+F/5eacf+xs3v/rLCW/+bt
        x//m7cf/5ezGbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObvxR/m7cjY5u3H/+btx//m7cf/3uW//4qN
        bP+XmnH/zM+F/8zPhf+Vl3D/YWNc/8zPhf+anXL/R0lT/09SVf+KjWz/k5Zw/56hc//Mz4X/l5px/7Gz
        e/+ssJb/5u3H/+btx//n68hBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObmzArn7chz5u3H/+bt
        x//e5b//io1s/5eacf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zP
        hf+XmnH/sbN7/6ywlv/m7cf/5u3G1P///wIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANX/
        1Qbm7cfu5u3H/97lv/+KjWz/l5px/8zPhf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zPhf/Mz4X/zM+F/8zP
        hf/Mz4X/zM+F/5SXb/+xs3v/rLCW/+btyO/m68cyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAObsx3vm7cf/5ezG/4CDav+xtHv/lphx/8XIgv+cn3P/lphx/5aYcf+srnn/urx+/5aY
        cf+WmHH/lphx/5aYcf+WmHH/n6Jz/5ibcv+WnJnznaWxzpuisMaWnau5XWZ5NwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////Aubtxpnm7cf/tbmd/4WIc/+Chm//goZv/4KGb/+Chm//goZv/4KG
        b/+Chm//gYVu/36Bb/+Eh3X/hId1/4SHdf+GiXn/oKee/+/8/f/v/P3/5PDz/+j19/+Ql6asAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOXuxzvn7seT5u3Iqufux5Lm7cft5u3H/+bt
        x//m7cf/5u3H/+btx//j6sX/pKyv/+r3+f/a5ur/7/z9/+/8/f/v/P3/4e3w/8jT2f/R3OL/5fH0/Xd7
        jYsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObt
        yI/m7cf/6O7L/+vx0v/m7cf/5u3H/+btx//a4MD/naSp/+36/P/v/P3/7/z9/+by9P/EztX/zdfd+KSt
        uN5TW3JcAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA+fn0WvP24/bx9eD/8fXf//P25P/u89r/6vDQ/+btx/+7wrD/rra6/5GYm//X4+b/7/z9/8vW
        3PhGS2JmX2Z8IwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5OzGQ+fuyvXu89r/6/DS/+btx//m7cf/5u3H/+btx//m7cf/5u3H+YuS
        mbmpsLzJd32NjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6O7GLeftyMbm7cf/5u3H/+btx//m7cf/5u3H/+bt
        x8nk7cU5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObryDPm7Mdu5e7Hd+bu
        x2jj7sguAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////////8B///8AIf//AAD//gAAD/4A
        AAf+AAAH4AAAB+AAAAfgAAAP4AAAD+AAAA/gAAAP8AAAD/wAAA/8AAAf/gAAB/4AAAP/gAAD//AAD//4
        AD///AA///4D////////////////////////////
</value>
  </data>
</root>